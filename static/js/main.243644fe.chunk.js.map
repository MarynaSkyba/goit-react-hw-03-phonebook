{"version":3,"sources":["components/Contacts/ContactList.styled.jsx","components/Contacts/ContactList.jsx","components/Contacts/ContactForm.styled.jsx","components/Contacts/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Title.styled.jsx","components/App.js","index.js"],"names":["Button","styled","button","List","ul","Name","p","Item","li","ContactList","contacts","onDeleteContacts","map","id","name","number","onClick","Form","form","Label","label","Input","input","ContactForm","state","nameId","uuidv4","telId","handleNameChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","Filter","target","onBlur","Title","h2","App","filter","deleteContacts","contactId","prevState","contact","formSubmitHandler","find","toLowerCase","alert","newContact","changeFilter","filteredContacts","toLocaleLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.243644fe.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Name = styled.p`\n  display: block;\n  padding: 0 15px;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  border-radius: 20px;\n  margin-bottom: 10px;\n  background: rgba(255, 255, 255, 0.2);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, List, Name, Item } from './ContactList.styled';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <Item key={id}>\n        <Name>\n          {name} : {number}\n        </Name>\n        <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\n      </Item>\n    ))}\n  </List>\n);\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onConDeleteContactshange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 400px;\n  padding: 40px 50px;\n  margin: 50px auto 0;\n  background-color: gainsboro;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  width: 103%;\n  margin: 40px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 14px;\n  background-color: antiquewhite;\n  cursor: pointer;\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = uuidv4();\n  telId = uuidv4();\n\n  handleNameChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label htmlFor={this.nameId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n          />\n        </Label>\n\n        <Label htmlFor={this.telId}>\n          Telephone\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={this.telId}\n            value={this.state.number}\n            onChange={this.handleNameChange}\n          />\n        </Label>\n        <Button type=\"submit\">Add to contacts</Button>\n      </Form>\n    );\n  }\n}\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 100%;\n  padding: 0 0 0 15px;\n  margin: 10px 0 15px;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  color: black;\n  background: rgba(255, 255, 255, 0.2);\n  font-family: 'Roboto', sans-serif;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from '../Filter/Filter.styled';\n\nconst Filter = ({ value, onChange}) => {\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={e => onChange(e.target.value)} onBlur={()=> onChange('')} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  display: block;\n  width: 400px;\n  margin: 50px auto 0;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 34px;\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './Contacts/ContactList';\nimport ContactForm from './Contacts/ContactForm';\nimport Filter from './Filter/Filter';\nimport { Title } from './Contacts/Title.styled';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = (name, number) => {\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter});\n  };\n\n \n\n  filteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <Title>Contacts</Title>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={this.filteredContacts()} onDeleteContacts={this.deleteContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}